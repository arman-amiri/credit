var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.169,1,1.702]],["body/modules/AppModule.html",[0,1.805,1,3.157,2,1.326,3,1.326,4,1.712,5,1.712,6,1.326,7,2.318,8,1.712,9,2.329,10,2.329,11,2.661,12,0.046,13,2.661,14,2.318,15,1.712,16,1.501,17,0.484,18,0.414,19,0.414,20,2.865,21,3.576,22,0.991,23,1.045,24,2.865,25,3.879,26,3.879,27,2.329,28,2.329,29,1.712,30,2.865,31,1.501,32,2.865,33,2.865,34,2.865,35,2.865,36,2.865,37,2.865,38,2.865,39,1.712,40,2.865,41,2.865,42,2.865,43,2.865,44,1.712,45,0.484,46,0.022,47,0.031,48,0.031]],["title/classes/BaseEntity.html",[46,0.022,49,1.493]],["body/classes/BaseEntity.html",[12,0.046,17,0.345,18,0.295,19,0.295,22,0.595,39,2.586,45,0.345,46,0.024,47,0.025,48,0.025,49,1.598,50,0.745,51,1.409,52,0.519,53,1.411,54,2.965,55,2.965,56,2.965,57,1.419,58,3.69,59,1.912,60,2.965,61,2.479,62,4.017,63,4.017,64,3.13,65,3.69,66,3.69,67,2.789,68,1.33,69,2.043,70,2.479,71,2.103,72,1.661,73,2.043,74,2.479,75,2.479,76,1.661,77,2.043,78,2.789,79,1.071,80,3.648,81,1.661,82,2.043,83,1.409,84,1.661,85,2.789,86,1.661,87,1.661,88,1.661,89,2.103,90,1.661,91,1.661,92,1.661,93,1.33,94,3.648,95,3.648,96,3.648,97,3.648,98,3.648,99,3.648,100,3.648,101,3.648,102,3.648,103,3.648,104,3.049]],["title/classes/CreateErrorLogDto.html",[46,0.022,105,1.493]],["body/classes/CreateErrorLogDto.html",[12,0.042,17,0.701,18,0.599,19,0.599,45,0.701,46,0.032,47,0.039,48,0.039,50,1.512,105,2.571,106,1.702,107,3.371,108,1.702,109,2.86]],["title/classes/CreateUserDto.html",[46,0.022,110,1.319]],["body/classes/CreateUserDto.html",[12,0.048,17,0.305,18,0.261,19,0.261,22,0.541,45,0.305,46,0.021,47,0.022,48,0.022,50,0.658,52,0.458,53,1.284,57,0.797,59,1.454,68,1.012,93,1.233,110,1.284,111,2.748,112,1.244,113,2.585,114,2.748,115,1.558,116,2.774,117,2.268,118,2.774,119,3.795,120,3.077,121,2.774,122,3.795,123,3.795,124,3.795,125,3.795,126,3.795,127,3.795,128,3.795,129,1.804,130,2.255,131,1.804,132,3.381,133,1.078,134,3.381,135,1.804,136,1.804,137,1.804,138,1.804,139,1.466,140,2.255,141,2.774,142,3.085,143,2.255]],["title/entities/ErrorLog.html",[144,1.965,145,1.493]],["body/entities/ErrorLog.html",[12,0.046,17,0.359,18,0.307,19,0.307,22,0.612,39,2.921,45,0.359,46,0.016,47,0.025,48,0.025,49,1.644,52,0.539,53,1.452,57,1.434,59,2.616,68,1.82,71,3.371,78,3.283,79,1.112,106,2.084,115,2.18,120,2.229,144,1.463,145,1.644,146,1.725,147,4.127,148,1.725,149,2.229,150,2.573,151,2.573,152,2.573,153,2.573,154,2.573,155,2.229,156,2.573,157,2.462,158,3.73,159,2.122,160,5.077,161,2.122,162,2.122,163,2.122,164,2.122,165,2.122,166,2.122,167,2.122,168,2.122,169,1.725,170,2.122,171,1.268]],["title/modules/ErrorLogModule.html",[0,1.169,11,1.493]],["body/modules/ErrorLogModule.html",[0,1.915,2,1.493,3,1.493,4,1.927,5,1.927,6,1.493,7,2.788,8,1.927,11,2.752,12,0.046,14,2.508,15,1.927,16,1.69,17,0.545,18,0.466,19,0.466,21,2.622,22,0.964,23,1.176,28,2.622,29,1.927,31,1.69,44,1.927,45,0.545,46,0.025,47,0.034,48,0.034,106,1.324,108,1.324,145,1.69,172,2.622,173,2.622,174,2.431,175,3.225,176,2.622,177,2.622,178,2.622,179,3.225]],["title/injectables/ErrorLogService.html",[174,1.319,180,1.493]],["body/injectables/ErrorLogService.html",[12,0.046,17,0.44,18,0.376,19,0.376,22,0.883,23,0.949,29,1.556,31,2.192,45,0.44,46,0.02,47,0.029,48,0.029,52,0.661,57,1.3,68,1.324,79,1.364,93,1.324,105,1.904,106,1.717,113,1.556,115,2.077,120,2.171,143,2.116,145,1.904,150,1.795,151,1.795,152,1.795,153,1.795,154,1.795,155,1.556,156,1.795,157,1.556,174,1.681,176,2.116,177,2.116,180,1.904,181,1.795,182,2.116,183,2.171,184,3.401,185,1.904,186,2.953,187,2.603,188,3.68,189,2.603,190,1.904,191,1.904,192,3.632,193,3.632,194,3.632,195,2.603,196,1.556,197,1.795,198,2.603,199,2.603,200,2.603,201,2.116,202,2.603,203,2.116,204,2.603,205,2.603,206,1.795,207,2.116,208,2.116,209,1.556]],["title/classes/GlobalExceptionFilter.html",[46,0.022,210,1.965]],["body/classes/GlobalExceptionFilter.html",[12,0.047,17,0.343,18,0.294,19,0.294,22,0.787,23,0.741,31,1.065,45,0.343,46,0.016,47,0.024,48,0.024,50,0.741,52,0.516,57,0.872,68,1.107,83,1.402,84,3.682,93,1.107,106,0.834,108,1.656,113,1.215,115,1.247,120,2.949,150,1.402,151,1.402,152,1.402,153,1.402,154,2.094,155,2.173,156,1.402,174,2.097,178,1.652,183,1.815,184,2.956,186,1.652,190,1.592,191,1.592,196,1.215,197,1.402,201,1.652,203,1.652,209,1.215,210,2.094,211,2.956,212,1.652,213,3.037,214,3.636,215,3.279,216,2.032,217,2.032,218,3.037,219,3.636,220,4.034,221,2.032,222,4.318,223,3.636,224,2.032,225,2.032,226,2.032,227,1.652,228,3.037,229,2.032,230,1.652,231,1.652,232,2.032,233,2.032,234,2.032,235,2.032,236,2.032,237,2.032,238,4.034,239,2.032,240,2.032,241,2.032,242,2.032,243,2.032,244,2.032,245,2.032,246,2.032,247,2.032,248,3.037,249,3.037,250,2.032,251,2.032,252,2.032,253,2.032,254,2.032,255,2.032,256,2.032,257,2.032,258,2.032,259,2.032]],["title/classes/UpdateErrorLogDto.html",[46,0.022,260,1.965]],["body/classes/UpdateErrorLogDto.html",[12,0.045,17,0.645,18,0.552,19,0.552,22,0.911,45,0.645,46,0.029,47,0.038,48,0.038,50,1.392,105,2.001,106,1.567,108,1.916,109,2.633,133,2.281,171,2.79,185,2.001,260,3.219,261,3.103,262,4.668,263,3.103,264,3.818]],["title/classes/UpdateUserDto.html",[46,0.022,265,1.493]],["body/classes/UpdateUserDto.html",[12,0.045,17,0.652,18,0.557,19,0.557,22,0.917,45,0.652,46,0.03,47,0.038,48,0.038,50,1.406,110,1.785,112,2.659,171,2.807,185,2.021,263,3.134,265,2.461,266,3.134,267,4.697,268,3.134,269,3.134,270,2.659]],["title/classes/User.html",[46,0.022,271,1.702]],["body/classes/User.html",[12,0.046,17,0.384,18,0.329,19,0.329,22,0.644,39,2.978,45,0.384,46,0.018,47,0.027,48,0.027,49,2.471,50,0.829,52,0.577,53,1.526,54,2.68,55,2.68,56,2.68,57,1.482,58,3.155,59,2.471,60,3.155,61,1.847,62,3.155,63,3.155,64,2.676,65,3.155,66,3.155,67,2.274,68,1.719,70,1.847,71,3.118,72,1.847,74,1.847,75,1.847,76,1.847,78,2.936,79,1.191,93,1.415,114,3.155,115,1.748,130,3.461,149,2.319,157,1.97,169,1.847,171,1.97,271,1.97,272,1.847,273,3.297,274,2.273,275,2.273,276,3.297,277,3.297,278,3.297,279,3.297,280,2.273,281,2.273,282,3.881,283,2.273,284,2.273,285,2.273,286,3.297]],["title/controllers/UserController.html",[287,1.702,288,1.702]],["body/controllers/UserController.html",[12,0.047,17,0.306,18,0.261,19,0.261,22,0.8,23,0.659,44,1.08,45,0.306,46,0.014,47,0.022,48,0.022,52,0.459,57,1.178,59,2.149,68,1.495,93,1.386,110,2.155,113,1.08,115,1.96,117,2.588,133,1.08,149,2.588,155,2.023,183,1.661,185,1.457,190,1.991,191,1.991,196,2.451,206,2.828,231,1.47,265,2.44,270,1.917,287,1.08,288,1.661,289,1.47,290,1.808,291,1.47,292,3.089,293,2.259,294,2.259,295,2.259,296,1.47,297,1.808,298,2.779,299,2.779,300,2.779,301,1.808,302,1.808,303,2.779,304,1.808,305,2.779,306,1.808,307,1.808,308,1.808,309,2.779,310,3.386,311,2.779,312,2.779,313,1.808,314,1.47,315,2.779,316,1.808,317,1.47,318,2.779,319,1.808,320,1.47,321,2.779,322,1.808,323,2.779,324,2.779,325,1.808,326,1.808,327,1.808,328,1.286,329,1.47,330,1.47,331,1.47,332,2.779,333,1.808,334,3.386,335,3.8,336,1.808,337,1.808,338,2.779,339,1.808,340,1.808,341,1.808,342,1.808,343,1.808,344,1.808,345,1.808,346,1.808,347,1.808,348,1.808,349,1.808]],["title/modules/UserModule.html",[0,1.169,13,1.493]],["body/modules/UserModule.html",[0,1.954,2,1.558,3,1.558,4,2.012,5,2.012,6,1.558,7,2.845,8,2.012,12,0.045,13,2.784,14,2.578,15,2.012,16,1.764,17,0.569,18,0.487,19,0.487,22,0.929,23,1.227,44,2.578,45,0.569,46,0.026,47,0.035,48,0.035,288,2.845,328,2.459,329,2.737,350,2.737,351,2.737,352,3.366,353,3.366]],["title/injectables/UserService.html",[180,1.493,328,1.319]],["body/injectables/UserService.html",[12,0.046,17,0.367,18,0.314,19,0.314,22,0.813,23,0.791,45,0.367,46,0.017,47,0.026,48,0.026,52,0.551,57,1.196,68,1.618,93,1.519,108,1.551,110,2.054,115,1.71,149,2.772,157,3,180,1.671,181,1.496,183,1.905,185,1.671,190,2.183,191,2.183,196,2.865,197,1.496,206,3.06,207,3.607,208,1.764,209,2.258,215,1.764,265,2.513,270,2.199,271,2.489,291,1.764,292,3.386,293,2.592,294,2.592,295,2.592,296,2.592,314,2.592,317,2.592,320,2.592,328,1.476,330,1.764,331,1.764,354,1.764,355,2.17,356,2.17,357,2.17,358,2.17,359,2.17,360,2.17,361,3.188,362,2.17,363,1.496,364,1.496,365,2.17,366,3.188,367,1.764,368,1.764,369,2.17]],["title/coverage.html",[370,2.665]],["body/coverage.html",[6,1.247,12,0.045,19,0.39,31,1.412,46,0.039,47,0.03,48,0.03,49,1.412,51,2.565,57,0.774,64,3.828,85,1.858,105,1.412,106,1.886,107,2.19,108,1.527,109,2.565,110,1.247,111,2.19,112,2.565,144,1.858,145,1.412,147,2.19,148,2.19,174,1.247,180,1.95,182,2.19,209,1.61,210,1.858,211,2.19,212,2.19,260,1.858,261,2.19,265,1.412,266,2.19,271,1.61,272,2.19,287,1.61,288,1.61,289,2.19,328,1.247,354,2.19,363,1.858,364,1.858,370,1.858,371,2.19,372,2.694,373,2.694,374,2.19,375,4.261,376,2.19,377,5.206,378,4.261,379,2.19,380,2.694,381,2.694,382,2.694,383,3.72,384,2.19,385,2.694,386,2.694]],["title/dependencies.html",[3,1.583,387,1.943]],["body/dependencies.html",[3,1.6,12,0.046,23,1.261,27,2.81,29,2.066,46,0.034,47,0.035,48,0.035,79,1.812,81,2.81,133,2.066,139,2.81,227,3.567,268,2.81,269,2.81,388,5.071,389,3.457,390,3.457,391,3.457,392,3.457,393,3.457,394,3.457,395,3.457,396,3.457,397,3.457,398,3.457,399,3.457,400,3.457,401,3.457,402,3.457,403,3.457,404,3.457,405,3.457]],["title/miscellaneous/functions.html",[406,1.429,407,2.78]],["body/miscellaneous/functions.html",[6,2.314,12,0.042,47,0.037,48,0.037,52,0.95,57,1.075,93,1.682,108,1.536,190,2.417,191,2.417,363,3.181,364,2.582,367,3.043,374,3.043,376,3.749,379,3.043,384,3.749,406,2.237,407,3.043,408,3.743,409,3.743,410,3.743,411,3.743,412,4.612,413,3.743]],["title/index.html",[52,0.607,414,2.391,415,2.391]],["body/index.html",[12,0.043,16,2.293,18,0.268,47,0.023,48,0.023,83,1.28,89,2.373,117,1.109,140,3.132,188,1.509,230,3.816,368,1.509,370,1.28,371,2.305,416,1.856,417,1.856,418,3.441,419,2.836,420,1.856,421,1.856,422,1.856,423,2.836,424,3.441,425,1.856,426,1.856,427,3.852,428,1.856,429,4.694,430,1.856,431,4.552,432,1.856,433,1.856,434,1.856,435,2.836,436,1.856,437,2.836,438,1.856,439,3.441,440,1.856,441,2.836,442,1.856,443,1.856,444,1.856,445,1.856,446,1.856,447,3.852,448,4.375,449,1.856,450,2.836,451,1.856,452,1.856,453,1.856,454,1.856,455,1.856,456,4.375,457,2.836,458,3.852,459,1.856,460,2.836,461,1.856,462,1.856,463,2.836,464,4.15,465,3.852,466,1.856,467,2.836,468,1.856,469,1.856,470,1.856,471,1.856,472,3.852,473,1.856,474,1.856,475,1.856,476,1.856,477,1.856,478,2.836,479,1.856,480,1.856,481,1.856,482,1.856,483,1.856,484,2.836,485,1.856,486,1.856,487,1.856,488,2.836,489,1.856,490,1.856,491,3.132,492,2.836,493,1.856,494,1.856,495,1.856,496,1.856,497,1.856,498,1.856,499,1.856,500,1.856,501,2.836,502,1.856,503,1.856,504,1.856,505,1.856,506,1.856,507,1.856,508,1.856,509,1.856,510,1.856,511,1.856,512,2.836,513,1.856,514,1.856,515,1.856,516,1.856,517,2.836,518,1.856,519,1.856,520,1.856,521,2.836,522,2.836,523,1.856,524,1.856,525,1.856,526,1.856,527,1.856,528,1.856,529,1.856,530,1.856,531,1.856,532,1.856,533,1.856,534,1.509,535,1.856,536,1.856,537,1.856,538,1.856,539,1.856,540,1.856,541,1.509,542,1.856,543,1.856]],["title/modules.html",[2,1.789]],["body/modules.html",[1,2.439,2,1.889,11,2.139,12,0.039,13,2.139,47,0.039,48,0.039,491,4.219,544,5.19,545,5.19,546,5.19]],["title/overview.html",[547,3.142]],["body/overview.html",[0,1.394,1,3.182,2,1.572,3,1.572,4,2.03,5,2.03,6,1.572,7,2.03,8,2.03,9,2.761,10,2.761,11,2.728,12,0.043,13,2.728,14,2.593,15,2.03,16,1.78,47,0.035,48,0.035,50,1.238,146,2.761,172,2.761,173,2.761,174,2.213,181,2.342,287,2.03,328,2.213,350,2.761,351,2.761,547,2.761,548,3.396,549,4.339,550,3.396,551,3.396]],["title/properties.html",[53,1.583,387,1.943]],["body/properties.html",[12,0.045,47,0.04,48,0.04,53,1.94,117,2.505,534,3.408,541,3.408,552,4.192,553,4.192,554,4.192]],["title/miscellaneous/variables.html",[406,1.429,555,2.78]],["body/miscellaneous/variables.html",[12,0.044,47,0.039,48,0.039,51,2.756,52,1.015,67,2.756,85,3.31,86,3.248,87,3.248,88,3.248,89,3.31,90,3.248,91,3.248,92,3.248,142,3.248,406,2.388,555,3.248,556,3.996]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":64,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"coverage.html":{}}}],["0.0.1",{"_index":553,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["0.3.23",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":549,"title":{},"body":{"overview.html":{}}}],["100",{"_index":130,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["11.0.0",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":550,"title":{},"body":{"overview.html":{}}}],["200",{"_index":309,"title":{},"body":{"controllers/UserController.html":{}}}],["201",{"_index":303,"title":{},"body":{"controllers/UserController.html":{}}}],["3",{"_index":548,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":305,"title":{},"body":{"controllers/UserController.html":{}}}],["5.0.1",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["6",{"_index":102,"title":{},"body":{"classes/BaseEntity.html":{}}}],["7",{"_index":551,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["7b805ef633b75cff5e25eaf276929346bd6f87aa",{"_index":543,"title":{},"body":{"index.html":{}}}],["9._",{"_index":127,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["action",{"_index":207,"title":{},"body":{"injectables/ErrorLogService.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":208,"title":{},"body":{"injectables/ErrorLogService.html":{},"injectables/UserService.html":{}}}],["allowing",{"_index":479,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":527,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":332,"title":{},"body":{"controllers/UserController.html":{}}}],["apiconsumes",{"_index":333,"title":{},"body":{"controllers/UserController.html":{}}}],["apiconsumes('application/x",{"_index":298,"title":{},"body":{"controllers/UserController.html":{}}}],["apioperation",{"_index":334,"title":{},"body":{"controllers/UserController.html":{}}}],["apiproperty",{"_index":132,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({example",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiresponse",{"_index":335,"title":{},"body":{"controllers/UserController.html":{}}}],["apiresponse({status",{"_index":304,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["application",{"_index":448,"title":{},"body":{"index.html":{}}}],["applications",{"_index":423,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":220,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["async",{"_index":184,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["author",{"_index":534,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":203,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["aws",{"_index":467,"title":{},"body":{"index.html":{}}}],["backers",{"_index":528,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":361,"title":{},"body":{"injectables/UserService.html":{}}}],["based",{"_index":462,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":49,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"entities/ErrorLog.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:17",{"_index":283,"title":{},"body":{"classes/User.html":{}}}],["baseentity:28",{"_index":285,"title":{},"body":{"classes/User.html":{}}}],["baseentity:38",{"_index":284,"title":{},"body":{"classes/User.html":{}}}],["board",{"_index":520,"title":{},"body":{"index.html":{}}}],["body",{"_index":324,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":546,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":544,"title":{},"body":{"modules.html":{}}}],["building",{"_index":419,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":103,"title":{},"body":{"classes/BaseEntity.html":{}}}],["catch",{"_index":215,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":218,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["cats",{"_index":310,"title":{},"body":{"controllers/UserController.html":{}}}],["cats'})@apiresponse({status",{"_index":308,"title":{},"body":{"controllers/UserController.html":{}}}],["channel",{"_index":494,"title":{},"body":{"index.html":{}}}],["check",{"_index":456,"title":{},"body":{"index.html":{}}}],["class",{"_index":46,"title":{"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":50,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clicks",{"_index":478,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":461,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_errorlogmodule",{"_index":172,"title":{},"body":{"modules/ErrorLogModule.html":{},"overview.html":{}}}],["cluster_errorlogmodule_providers",{"_index":173,"title":{},"body":{"modules/ErrorLogModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":350,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":351,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":78,"title":{},"body":{"classes/BaseEntity.html":{},"entities/ErrorLog.html":{},"classes/User.html":{}}}],["column('text",{"_index":160,"title":{},"body":{"entities/ErrorLog.html":{}}}],["column({length",{"_index":273,"title":{},"body":{"classes/User.html":{}}}],["column({name",{"_index":60,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["column({type",{"_index":275,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":485,"title":{},"body":{"index.html":{}}}],["config/typeorm.connection",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(createerrorlogdto",{"_index":202,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["console.log(createuserdto",{"_index":341,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(message",{"_index":244,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["const",{"_index":84,"title":{},"body":{"classes/BaseEntity.html":{},"classes/GlobalExceptionFilter.html":{}}}],["constructor",{"_index":186,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["constructor(errorlogrepository",{"_index":187,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["constructor(errorlogservice",{"_index":216,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["constructor(private",{"_index":231,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"controllers/UserController.html":{}}}],["controller",{"_index":287,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('users",{"_index":336,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["courses",{"_index":500,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":370,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":185,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":340,"title":{},"body":{"controllers/UserController.html":{}}}],["create(createerrorlogdto",{"_index":193,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["create(createuserdto",{"_index":296,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["created_at",{"_index":61,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["createdat",{"_index":54,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["createerrorlogdto",{"_index":105,"title":{"classes/CreateErrorLogDto.html":{}},"body":{"classes/CreateErrorLogDto.html":{},"injectables/ErrorLogService.html":{},"classes/UpdateErrorLogDto.html":{},"coverage.html":{}}}],["createerrorlogdto.message",{"_index":205,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["createuserdto",{"_index":110,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto})@apiresponse({status",{"_index":302,"title":{},"body":{"controllers/UserController.html":{}}}],["credit",{"_index":542,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":232,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":235,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":237,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["date",{"_index":58,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["date().toisostring",{"_index":259,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["datepart(tzoffset",{"_index":87,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["datetime",{"_index":96,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datetime2",{"_index":62,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["datetime2(0",{"_index":100,"title":{},"body":{"classes/BaseEntity.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":59,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["deeper",{"_index":496,"title":{},"body":{"index.html":{}}}],["default",{"_index":67,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":68,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":327,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":318,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted_at",{"_index":70,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["deletedat",{"_index":55,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":447,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":466,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":457,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":477,"title":{},"body":{"index.html":{}}}],["description",{"_index":117,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":432,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":507,"title":{},"body":{"index.html":{}}}],["discord",{"_index":493,"title":{},"body":{"index.html":{}}}],["dive",{"_index":495,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":371,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":330,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":331,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":442,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":420,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":454,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":452,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":511,"title":{},"body":{"index.html":{}}}],["entities",{"_index":146,"title":{},"body":{"entities/ErrorLog.html":{},"overview.html":{}}}],["entities/error",{"_index":176,"title":{},"body":{"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{}}}],["entity",{"_index":144,"title":{"entities/ErrorLog.html":{}},"body":{"entities/ErrorLog.html":{},"coverage.html":{}}}],["entity('error_log",{"_index":170,"title":{},"body":{"entities/ErrorLog.html":{}}}],["env.${process.env.env",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":108,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"modules/ErrorLogModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["error).message",{"_index":256,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["error.ts",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["errorlog",{"_index":145,"title":{"entities/ErrorLog.html":{}},"body":{"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"coverage.html":{}}}],["errorlogmodule",{"_index":11,"title":{"modules/ErrorLogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules.html":{},"overview.html":{}}}],["errorlogrepository",{"_index":192,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["errorlogservice",{"_index":174,"title":{"injectables/ErrorLogService.html":{}},"body":{"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"coverage.html":{},"overview.html":{}}}],["example",{"_index":140,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["exception",{"_index":222,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":212,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:13",{"_index":217,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.filter.ts:17",{"_index":221,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.getresponse",{"_index":241,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.getstatus",{"_index":239,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.message",{"_index":242,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.stack",{"_index":245,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exceptionfilter",{"_index":214,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exclude",{"_index":80,"title":{},"body":{"classes/BaseEntity.html":{}}}],["experience",{"_index":498,"title":{},"body":{"index.html":{}}}],["export",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":227,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":171,"title":{},"body":{"entities/ErrorLog.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["false",{"_index":66,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["family",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["fast",{"_index":470,"title":{},"body":{"index.html":{}}}],["features",{"_index":481,"title":{},"body":{"index.html":{}}}],["few",{"_index":472,"title":{},"body":{"index.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":292,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":293,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":344,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":314,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["focus",{"_index":480,"title":{},"body":{"index.html":{}}}],["follow",{"_index":514,"title":{},"body":{"index.html":{}}}],["form",{"_index":300,"title":{},"body":{"controllers/UserController.html":{}}}],["framework",{"_index":418,"title":{},"body":{"index.html":{}}}],["full",{"_index":510,"title":{},"body":{"index.html":{}}}],["function",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":407,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":475,"title":{},"body":{"index.html":{}}}],["generated",{"_index":278,"title":{},"body":{"classes/User.html":{}}}],["get(':id",{"_index":315,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":307,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":414,"title":{"index.html":{}},"body":{}}],["globalexceptionfilter",{"_index":210,"title":{"classes/GlobalExceptionFilter.html":{}},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["graph",{"_index":503,"title":{},"body":{"index.html":{}}}],["grow",{"_index":524,"title":{},"body":{"index.html":{}}}],["handelerror",{"_index":363,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handelerror(error",{"_index":367,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["hands",{"_index":497,"title":{},"body":{"index.html":{}}}],["handy",{"_index":486,"title":{},"body":{"index.html":{}}}],["help",{"_index":501,"title":{},"body":{"index.html":{}}}],["here",{"_index":532,"title":{},"body":{"index.html":{}}}],["host",{"_index":219,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":233,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpexception",{"_index":223,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":538,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":224,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":240,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["id",{"_index":149,"title":{},"body":{"entities/ErrorLog.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":213,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{}}}],["increment",{"_index":279,"title":{},"body":{"classes/User.html":{}}}],["index",{"_index":52,"title":{"index.html":{}},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":459,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":483,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":282,"title":{},"body":{"classes/User.html":{}}}],["inject",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":180,"title":{"injectables/ErrorLogService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ErrorLogService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/ErrorLogService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":198,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["injectrepository(errorlog",{"_index":199,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["install",{"_index":474,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":430,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":238,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["instead",{"_index":95,"title":{},"body":{"classes/BaseEntity.html":{}}}],["int",{"_index":276,"title":{},"body":{"classes/User.html":{}}}],["interact",{"_index":504,"title":{},"body":{"index.html":{}}}],["internal",{"_index":243,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["iran",{"_index":91,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["isstring",{"_index":134,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring({message",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["job",{"_index":517,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":519,"title":{},"body":{"index.html":{}}}],["join",{"_index":530,"title":{},"body":{"index.html":{}}}],["json.stringify(message",{"_index":250,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["json.stringify(req.body",{"_index":251,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["json.stringify(req.params",{"_index":253,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["json.stringify(req.query",{"_index":252,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["kamil",{"_index":535,"title":{},"body":{"index.html":{}}}],["key",{"_index":449,"title":{},"body":{"index.html":{}}}],["learn",{"_index":489,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":286,"title":{},"body":{"classes/User.html":{}}}],["license",{"_index":541,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":522,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":516,"title":{},"body":{"index.html":{}}}],["literal",{"_index":194,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["log.dto",{"_index":264,"title":{},"body":{"classes/UpdateErrorLogDto.html":{}}}],["log.dto.ts",{"_index":109,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"classes/UpdateErrorLogDto.html":{},"coverage.html":{}}}],["log.entity",{"_index":177,"title":{},"body":{"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{}}}],["log.entity.ts",{"_index":148,"title":{},"body":{"entities/ErrorLog.html":{},"coverage.html":{}}}],["log.entity.ts:11",{"_index":159,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.entity.ts:14",{"_index":162,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.entity.ts:17",{"_index":168,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.entity.ts:20",{"_index":167,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.entity.ts:23",{"_index":161,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.entity.ts:26",{"_index":166,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.entity.ts:29",{"_index":163,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.entity.ts:32",{"_index":165,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.entity.ts:35",{"_index":164,"title":{},"body":{"entities/ErrorLog.html":{}}}],["log.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["log.module.ts",{"_index":175,"title":{},"body":{"modules/ErrorLogModule.html":{}}}],["log.service",{"_index":178,"title":{},"body":{"modules/ErrorLogModule.html":{},"classes/GlobalExceptionFilter.html":{}}}],["log.service.ts",{"_index":182,"title":{},"body":{"injectables/ErrorLogService.html":{},"coverage.html":{}}}],["log.service.ts:12",{"_index":195,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["log.service.ts:7",{"_index":189,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["log/dto/create",{"_index":107,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"coverage.html":{}}}],["log/dto/update",{"_index":261,"title":{},"body":{"classes/UpdateErrorLogDto.html":{},"coverage.html":{}}}],["log/entities/error",{"_index":147,"title":{},"body":{"entities/ErrorLog.html":{},"coverage.html":{}}}],["log/error",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["logger/logger.service",{"_index":229,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["loggerservice",{"_index":228,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["looking",{"_index":460,"title":{},"body":{"index.html":{}}}],["loop",{"_index":513,"title":{},"body":{"index.html":{}}}],["makes",{"_index":468,"title":{},"body":{"index.html":{}}}],["managing",{"_index":482,"title":{},"body":{"index.html":{}}}],["matches",{"_index":135,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[\\u0600",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":464,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":136,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(50",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["metadata",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":150,"title":{},"body":{"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["methods",{"_index":183,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":137,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":406,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":521,"title":{},"body":{"index.html":{}}}],["mode",{"_index":435,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/error",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":458,"title":{},"body":{"index.html":{}}}],["mssql",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":536,"title":{},"body":{"index.html":{}}}],["name",{"_index":93,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":508,"title":{},"body":{"index.html":{}}}],["nest",{"_index":424,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":540,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":230,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":268,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":476,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":133,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateErrorLogDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"dependencies.html":{}}}],["new",{"_index":209,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":417,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":362,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":429,"title":{},"body":{"index.html":{}}}],["null",{"_index":201,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["nullable",{"_index":71,"title":{},"body":{"classes/BaseEntity.html":{},"entities/ErrorLog.html":{},"classes/User.html":{}}}],["number",{"_index":157,"title":{},"body":{"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["offer",{"_index":518,"title":{},"body":{"index.html":{}}}],["official",{"_index":465,"title":{},"body":{"index.html":{}}}],["onupdate",{"_index":75,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["open",{"_index":523,"title":{},"body":{"index.html":{}}}],["optional",{"_index":191,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":547,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":387,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":326,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":190,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":509,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":263,"title":{},"body":{"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createerrorlogdto",{"_index":262,"title":{},"body":{"classes/UpdateErrorLogDto.html":{}}}],["partialtype(createuserdto",{"_index":267,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["patch",{"_index":325,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id",{"_index":321,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":257,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["platform",{"_index":463,"title":{},"body":{"index.html":{}}}],["please",{"_index":492,"title":{},"body":{"index.html":{}}}],["possible",{"_index":455,"title":{},"body":{"index.html":{}}}],["post",{"_index":323,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":297,"title":{},"body":{"controllers/UserController.html":{}}}],["precision",{"_index":63,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["prefix",{"_index":290,"title":{},"body":{"controllers/UserController.html":{}}}],["primary",{"_index":277,"title":{},"body":{"classes/User.html":{}}}],["primarygeneratedcolumn",{"_index":158,"title":{},"body":{"entities/ErrorLog.html":{}}}],["private",{"_index":200,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["production",{"_index":437,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":416,"title":{},"body":{"index.html":{}}}],["project",{"_index":427,"title":{},"body":{"index.html":{}}}],["properties",{"_index":53,"title":{"properties.html":{}},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"classes/User.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["questions",{"_index":490,"title":{},"body":{"index.html":{}}}],["read",{"_index":531,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/UserController.html":{}}}],["ready",{"_index":446,"title":{},"body":{"index.html":{}}}],["real",{"_index":505,"title":{},"body":{"index.html":{}}}],["reduced",{"_index":97,"title":{},"body":{"classes/BaseEntity.html":{}}}],["reflect",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":294,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":348,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":317,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removes",{"_index":369,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":188,"title":{},"body":{"injectables/ErrorLogService.html":{},"index.html":{}}}],["req",{"_index":234,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["req.method",{"_index":247,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["req.url",{"_index":248,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["request",{"_index":225,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["requestbody",{"_index":151,"title":{},"body":{"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["requestparams",{"_index":152,"title":{},"body":{"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["requestquery",{"_index":153,"title":{},"body":{"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["requiring",{"_index":471,"title":{},"body":{"index.html":{}}}],["res",{"_index":236,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["res.status(status).json",{"_index":254,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":484,"title":{},"body":{"index.html":{}}}],["response",{"_index":226,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["results",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":312,"title":{},"body":{"controllers/UserController.html":{}}}],["return",{"_index":206,"title":{},"body":{"injectables/ErrorLogService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":196,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["run",{"_index":431,"title":{},"body":{"index.html":{}}}],["runs",{"_index":453,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["s\\u200c",{"_index":128,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["save",{"_index":98,"title":{},"body":{"classes/BaseEntity.html":{}}}],["scalable",{"_index":421,"title":{},"body":{"index.html":{}}}],["select",{"_index":65,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["server",{"_index":83,"title":{},"body":{"classes/BaseEntity.html":{},"classes/GlobalExceptionFilter.html":{},"index.html":{}}}],["setup",{"_index":428,"title":{},"body":{"index.html":{}}}],["setupswagger",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["side",{"_index":422,"title":{},"body":{"index.html":{}}}],["simple",{"_index":473,"title":{},"body":{"index.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":526,"title":{},"body":{"index.html":{}}}],["sql",{"_index":82,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/.../base.entity.ts",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handel",{"_index":409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.config.ts",{"_index":410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/swagger.config.ts",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/filters/global",{"_index":211,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/base/base.entity",{"_index":169,"title":{},"body":{"entities/ErrorLog.html":{},"classes/User.html":{}}}],["src/modules/base/base.entity.ts",{"_index":51,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/base/base.entity.ts:17",{"_index":69,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/base/base.entity.ts:28",{"_index":77,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/base/base.entity.ts:38",{"_index":73,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/error",{"_index":106,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"entities/ErrorLog.html":{},"modules/ErrorLogModule.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/UpdateErrorLogDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/create",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/update",{"_index":266,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/entities/user.entity.ts",{"_index":272,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/modules/user/entities/user.entity.ts:10",{"_index":280,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/entities/user.entity.ts:13",{"_index":274,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/entities/user.entity.ts:16",{"_index":281,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.controller.ts",{"_index":289,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:29",{"_index":306,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:41",{"_index":313,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:46",{"_index":316,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:51",{"_index":322,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:56",{"_index":319,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":352,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":354,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:12",{"_index":355,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:22",{"_index":357,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:26",{"_index":358,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:30",{"_index":360,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:34",{"_index":359,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utility/handel",{"_index":364,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stack",{"_index":154,"title":{},"body":{"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["standard",{"_index":92,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":433,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":436,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":438,"title":{},"body":{"index.html":{}}}],["started",{"_index":415,"title":{"index.html":{}},"body":{}}],["starter",{"_index":426,"title":{},"body":{"index.html":{}}}],["statements",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":155,"title":{},"body":{"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/UserController.html":{}}}],["statuscode",{"_index":255,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["stay",{"_index":512,"title":{},"body":{"index.html":{}}}],["steps",{"_index":450,"title":{},"body":{"index.html":{}}}],["storage",{"_index":99,"title":{},"body":{"classes/BaseEntity.html":{}}}],["straightforward",{"_index":469,"title":{},"body":{"index.html":{}}}],["string",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["successfully",{"_index":311,"title":{},"body":{"controllers/UserController.html":{}}}],["summary",{"_index":338,"title":{},"body":{"controllers/UserController.html":{}}}],["support",{"_index":491,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":545,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["switchoffset(sysdatetimeoffset",{"_index":86,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["sysdatetimeoffset",{"_index":88,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":451,"title":{},"body":{"index.html":{}}}],["takes",{"_index":101,"title":{},"body":{"classes/BaseEntity.html":{}}}],["tehrannowsql",{"_index":85,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":441,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":444,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":443,"title":{},"body":{"index.html":{}}}],["tests",{"_index":439,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":525,"title":{},"body":{"index.html":{}}}],["this.errorlogrepository.create",{"_index":204,"title":{},"body":{"injectables/ErrorLogService.html":{}}}],["this.errorlogservice.create",{"_index":246,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["this.usersservice.create(createuserdto",{"_index":342,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findall",{"_index":343,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findone(+id",{"_index":345,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.remove(+id",{"_index":349,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.update(+id",{"_index":347,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":366,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":89,"title":{},"body":{"classes/BaseEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":258,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["toplainonly",{"_index":104,"title":{},"body":{"classes/BaseEntity.html":{}}}],["touch",{"_index":533,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":81,"title":{},"body":{"classes/BaseEntity.html":{},"dependencies.html":{}}}],["true",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"entities/ErrorLog.html":{},"classes/User.html":{}}}],["true})@exclude({toplainonly",{"_index":72,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["try",{"_index":365,"title":{},"body":{"injectables/UserService.html":{}}}],["twitter",{"_index":539,"title":{},"body":{"index.html":{}}}],["type",{"_index":57,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":249,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["typeorm",{"_index":79,"title":{},"body":{"classes/BaseEntity.html":{},"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typeormconnection",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconnection().usefactory",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{}}}],["typeormmodule.forfeature([errorlog",{"_index":179,"title":{},"body":{"modules/ErrorLogModule.html":{}}}],["typeormmodule.forrootasync",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":269,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":425,"title":{},"body":{"index.html":{}}}],["u06ffa",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ui",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":143,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ErrorLogService.html":{}}}],["undefined})@exclude({toplainonly",{"_index":76,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["unit",{"_index":440,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":197,"title":{},"body":{"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":554,"title":{},"body":{"properties.html":{}}}],["update",{"_index":295,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":346,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":320,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updated_at",{"_index":74,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["updatedat",{"_index":56,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["updateerrorlogdto",{"_index":260,"title":{"classes/UpdateErrorLogDto.html":{}},"body":{"classes/UpdateErrorLogDto.html":{},"coverage.html":{}}}],["updates",{"_index":368,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["updateuserdto",{"_index":265,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["url",{"_index":156,"title":{},"body":{"entities/ErrorLog.html":{},"injectables/ErrorLogService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["urlencoded",{"_index":339,"title":{},"body":{"controllers/UserController.html":{}}}],["urlencoded')@apibody({type",{"_index":301,"title":{},"body":{"controllers/UserController.html":{}}}],["use",{"_index":94,"title":{},"body":{"classes/BaseEntity.html":{}}}],["usefactory",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":271,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":353,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":270,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":131,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":129,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.service",{"_index":329,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":288,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":13,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":291,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":328,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":337,"title":{},"body":{"controllers/UserController.html":{}}}],["using",{"_index":506,"title":{},"body":{"index.html":{}}}],["validateif",{"_index":138,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validateif((object",{"_index":141,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validator",{"_index":139,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":142,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":555,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":552,"title":{},"body":{"properties.html":{}}}],["video",{"_index":499,"title":{},"body":{"index.html":{}}}],["visit",{"_index":488,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":502,"title":{},"body":{"index.html":{}}}],["void",{"_index":356,"title":{},"body":{"injectables/UserService.html":{}}}],["watch",{"_index":434,"title":{},"body":{"index.html":{}}}],["website",{"_index":537,"title":{},"body":{"index.html":{}}}],["working",{"_index":487,"title":{},"body":{"index.html":{}}}],["www",{"_index":299,"title":{},"body":{"controllers/UserController.html":{}}}],["x",{"_index":515,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":529,"title":{},"body":{"index.html":{}}}],["you're",{"_index":445,"title":{},"body":{"index.html":{}}}],["z0",{"_index":126,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":125,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zone",{"_index":90,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorLogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nErrorLogModule\n\nErrorLogModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nErrorLogModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './modules/user/user.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ErrorLogModule } from './modules/error-log/error-log.module';\nimport typeormConnection from './config/typeorm.connection';\n\n@Module({\n  imports: [\n    UserModule,\n    ConfigModule.forRoot({\n      envFilePath: `.env.${process.env.ENV}`,\n      isGlobal: true,\n    }),\n\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n\n      inject: [ConfigService],\n      useFactory: typeormConnection().useFactory,\n    }),\n\n    ErrorLogModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/base/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'created_at', type: 'datetime2', precision: 0, select: false, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/base/base.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'deleted_at', type: 'datetime2', precision: 0, select: false, nullable: true})@Exclude({toPlainOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/base/base.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'updated_at', type: 'datetime2', precision: 0, select: false, default: () => , onUpdate: undefined})@Exclude({toPlainOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/base/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column } from 'typeorm';\nimport { Exclude } from 'class-transformer';\n\n// just for SQL Server\nconst tehranNowSql = () =>\n  \"SWITCHOFFSET(SYSDATETIMEOFFSET(), DATEPART(TZOFFSET, SYSDATETIMEOFFSET() AT TIME ZONE 'Iran Standard Time'))\";\n\nexport class BaseEntity {\n  @Column({\n    name: 'created_at',\n    type: 'datetime2', // Use datetime2 instead of datetime\n    precision: 0, // Reduced precision to save storage (datetime2(0) takes 6 bytes)\n    select: false,\n    default: () => tehranNowSql(),\n  })\n  createdAt: Date;\n\n  @Column({\n    name: 'updated_at',\n    type: 'datetime2', // Use datetime2 instead of datetime\n    precision: 0, // Reduced precision to save storage (datetime2(0) takes 6 bytes)\n    select: false,\n    default: () => tehranNowSql(),\n    onUpdate: tehranNowSql(),\n  })\n  @Exclude({ toPlainOnly: true })\n  updatedAt: Date;\n\n  @Column({\n    name: 'deleted_at',\n    type: 'datetime2', // Use datetime2 instead of datetime\n    precision: 0, // Reduced precision to save storage (datetime2(0) takes 6 bytes)\n    select: false,\n    nullable: true,\n  })\n  @Exclude({ toPlainOnly: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateErrorLogDto.html":{"url":"classes/CreateErrorLogDto.html","title":"class - CreateErrorLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateErrorLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/error-log/dto/create-error-log.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateErrorLogDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                family\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        family\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'رضایی', description: 'نام خانوادگی کاربر'})@IsString({message: ' نام خانوادگی باید متن نوشتاری باشد'})@MaxLength(50, {message: 'نام خانوادگی باید حداکثر 50 حرف باشد'})@MinLength(3, {message: 'نام خانوادگی باید حداقل شامل ۳ حرف باشد'})@Matches(/^[\\u0600-\\u06FFA-Za-z0-9._/,-\\s\\u200C]*$/, {message: 'مقادیر ورودی معتبر نیست'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'علی', description: 'نام کاربر'})@IsString({message: ' نام باید متن نوشتاری باشد'})@MaxLength(50, {message: 'نام باید حداکثر 100 حرف باشد'})@MinLength(3, {message: 'نام باید حداقل شامل ۳ حرف باشد'})@Matches(/^[\\u0600-\\u06FFA-Za-z0-9._/,-\\s\\u200C]*$/, {message: 'مقادیر ورودی معتبر نیست'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, Matches, MaxLength, MinLength, ValidateIf } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: 'علی', description: 'نام کاربر' })\n  @IsString({ message: ' نام باید متن نوشتاری باشد' })\n  @MaxLength(50, { message: 'نام باید حداکثر 100 حرف باشد' })\n  @MinLength(3, { message: 'نام باید حداقل شامل ۳ حرف باشد' })\n  // @ValidateIf((object, value) => value !== undefined)\n  @Matches(/^[\\u0600-\\u06FFA-Za-z0-9._/,-\\s\\u200C]*$/, {\n    message: 'مقادیر ورودی معتبر نیست',\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'رضایی', description: 'نام خانوادگی کاربر' })\n  @IsString({ message: ' نام خانوادگی باید متن نوشتاری باشد' })\n  @MaxLength(50, { message: 'نام خانوادگی باید حداکثر 50 حرف باشد' })\n  @MinLength(3, { message: 'نام خانوادگی باید حداقل شامل ۳ حرف باشد' })\n  // @ValidateIf((object, value) => value !== undefined)\n  @Matches(/^[\\u0600-\\u06FFA-Za-z0-9._/,-\\s\\u200C]*$/, {\n    message: 'مقادیر ورودی معتبر نیست',\n  })\n  readonly family: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ErrorLog.html":{"url":"entities/ErrorLog.html","title":"entity - ErrorLog","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ErrorLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/error-log/entities/error-log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                requestBody\n                            \n                            \n                                    \n                                requestParams\n                            \n                            \n                                    \n                                requestQuery\n                            \n                            \n                                    \n                                stack\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        requestBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        requestParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        requestQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/error-log/entities/error-log.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from 'src/modules/base/base.entity';\nimport {\n    Entity,\n    Column,\n    PrimaryGeneratedColumn,\n  } from 'typeorm';\n  \n  @Entity('error_log')\n  export class ErrorLog extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n  \n    @Column()\n    method: string;\n  \n    @Column()\n    url: string;\n  \n    @Column()\n    status: number;\n  \n    @Column('text')\n    message: string;\n  \n    @Column('text', { nullable: true })\n    stack: string;\n  \n    @Column('text', { nullable: true })\n    requestBody: string;\n  \n    @Column('text', { nullable: true })\n    requestQuery: string;\n  \n    @Column('text', { nullable: true })\n    requestParams: string;\n  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorLogModule.html":{"url":"modules/ErrorLogModule.html","title":"module - ErrorLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorLogModule\n\n\n\ncluster_ErrorLogModule_providers\n\n\n\n\nErrorLogService\n\nErrorLogService\n\n\n\nErrorLogModule\n\nErrorLogModule\n\nErrorLogModule -->\n\nErrorLogService->ErrorLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/error-log/error-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ErrorLogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorLog } from './entities/error-log.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ErrorLogService } from './error-log.service';\n\n@Module({\n  imports : [TypeOrmModule.forFeature([ErrorLog]),],\n  controllers: [],\n  providers: [ErrorLogService],\n})\nexport class ErrorLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLogService.html":{"url":"injectables/ErrorLogService.html","title":"injectable - ErrorLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/error-log/error-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorLogRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/error-log/error-log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorLogRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createErrorLogDto: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/error-log/error-log.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createErrorLogDto\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ErrorLog } from './entities/error-log.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ErrorLogService {\n  constructor(\n    @InjectRepository(ErrorLog)\n    private readonly errorLogRepository: Repository,\n  ) {}\n  async create(createErrorLogDto: {\n    method: string;\n    url: string;\n    status: number;\n    message: string;\n    stack: string | null | undefined;\n    requestBody: string;\n    requestQuery: string;\n    requestParams: string;\n  }) {\n    console.log(createErrorLogDto, 'createErrorLogDto');\n\n    // await this.errorLogRepository.create({\n    //   message: createErrorLogDto.message,\n    // });\n    return 'This action adds a new errorLog';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalExceptionFilter.html":{"url":"classes/GlobalExceptionFilter.html","title":"class - GlobalExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/global-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorLogService: ErrorLogService)\n                    \n                \n                        \n                            \n                                Defined in src/filters/global-exception.filter.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorLogService\n                                                  \n                                                        \n                                                                        ErrorLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-exception.filter.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { ErrorLogService } from 'src/modules/error-log/error-log.service';\n//   import { LoggerService } from '../logger/logger.service';\n\n@Catch()\nexport class GlobalExceptionFilter implements ExceptionFilter {\n  // LoggerService را به طور خودکار از NestJS دریافت می‌کنیم\n  constructor(private readonly errorLogService: ErrorLogService) {}\n\n  async catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const req = ctx.getRequest();\n    const res = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const message =\n      exception instanceof HttpException\n        ? exception.getResponse()\n        : exception instanceof Error\n          ? exception.message // اگر خطا از نوع Error باشه\n          : 'Internal server error';\n    console.log(message, 'message');\n    const stack = exception instanceof Error ? exception.stack : null;\n\n    await this.errorLogService.create({\n      method: req.method,\n      url: req.url,\n      status,\n      message: typeof message === 'string' ? message : JSON.stringify(message),\n      stack,\n      requestBody: JSON.stringify(req.body),\n      requestQuery: JSON.stringify(req.query),\n      requestParams: JSON.stringify(req.params),\n    });\n\n    res.status(status).json({\n      statusCode: status,\n      message: typeof message === 'string' ? message : (message as Error).message,\n      //   path: req.url,\n      timestamp: new Date().toISOString(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateErrorLogDto.html":{"url":"classes/UpdateErrorLogDto.html","title":"class - UpdateErrorLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateErrorLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/error-log/dto/update-error-log.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateErrorLogDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateErrorLogDto } from './create-error-log.dto';\n\nexport class UpdateErrorLogDto extends PartialType(CreateErrorLogDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                family\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        family\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 100, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', primary: true, generated: 'increment'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 100, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'created_at', type: 'datetime2', precision: 0, select: false, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'deleted_at', type: 'datetime2', precision: 0, select: false, nullable: true})@Exclude({toPlainOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'updated_at', type: 'datetime2', precision: 0, select: false, default: () => , onUpdate: undefined})@Exclude({toPlainOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from \"src/modules/base/base.entity\";\nimport { Column } from \"typeorm\";\n\nexport class User extends BaseEntity {\n    @Column({\n        type: 'int',\n        primary: true,\n        generated: 'increment',\n      })\n      id: number;\n\n      @Column({ length: 100, nullable: true })\n      family: string;\n    \n      @Column({ length: 100, nullable: true })\n      name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'ایجاد کاربر جدید'})@ApiConsumes('application/x-www-form-urlencoded')@ApiBody({type: CreateUserDto})@ApiResponse({status: 201, description: 'کاربر با موفقیت ایجاد شد'})@ApiResponse({status: 400, description: 'درخواست نامعتبر'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all cats'})@ApiResponse({status: 200, description: 'The cats have been successfully retrieved.'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBody, ApiConsumes, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller('users')\nexport class UserController {\n  constructor(private readonly usersService: UserService) {}\n\n  @Post()\n\n  \n  @ApiOperation({ summary: 'ایجاد کاربر جدید' })\n  @ApiConsumes('application/x-www-form-urlencoded')\n  @ApiBody({ type: CreateUserDto })\n  @ApiResponse({ status: 201, description: 'کاربر با موفقیت ایجاد شد' })\n  @ApiResponse({ status: 400, description: 'درخواست نامعتبر' })\n  \n  \n  create(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto, 'createUserDto');\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all cats' })\n  @ApiResponse({\n    status: 200,\n    description: 'The cats have been successfully retrieved.',\n  })\n\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport handelError from 'src/utility/handel-error';\n\n@Injectable()\nexport class UserService {\n  create(createUserDto: CreateUserDto) {\n    try {\n      // throw new Error('اطلاعات وارد شده صحیح نیست');\n      throw new BadRequestException('کاربر یافت نشد');\n      // return 'This action adds a new user';\n    } catch (error: unknown) {\n      handelError(error);\n    }\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/config/swagger.config.ts\n            \n            function\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/global-exception.filter.ts\n            \n            class\n            GlobalExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/base/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/modules/base/base.entity.ts\n            \n            variable\n            tehranNowSql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/error-log/dto/create-error-log.dto.ts\n            \n            class\n            CreateErrorLogDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/error-log/dto/update-error-log.dto.ts\n            \n            class\n            UpdateErrorLogDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/error-log/entities/error-log.entity.ts\n            \n            entity\n            ErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/error-log/error-log.service.ts\n            \n            injectable\n            ErrorLogService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/utility/handel-error.ts\n            \n            function\n            handelError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            mssql : ^11.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.23\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handelError   (src/.../handel-error.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utility/handel-error.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handelError\n                        \n                    \n                \n            \n            \n                \nhandelError(error)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/config/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\ncredit\n\n\n\n\n\n\n\n7b805ef633b75cff5e25eaf276929346bd6f87aa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ErrorLogModule\n\n\n\ncluster_ErrorLogModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nErrorLogModule\n\nErrorLogModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nErrorLogModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nErrorLogService\n\nErrorLogService\n\nErrorLogModule -->\n\nErrorLogService->ErrorLogModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            tehranNowSql   (src/.../base.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/base/base.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tehranNowSql\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  \"SWITCHOFFSET(SYSDATETIMEOFFSET(), DATEPART(TZOFFSET, SYSDATETIMEOFFSET() AT TIME ZONE 'Iran Standard Time'))\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
